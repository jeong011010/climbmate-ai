services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - CLIP_MODEL=ViT-B/32
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    volumes:
      - ./backend/climbmate.db:/app/backend/climbmate.db
      - ./backend/models:/app/backend/models
      - ./holdcheck:/app/holdcheck
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 2  # 동시 요청 처리를 위해 2개 인스턴스

  # 추가 백엔드 인스턴스 (동시 요청 처리용)
  backend-2:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - CLIP_MODEL=ViT-B/32
    volumes:
      - ./backend/climbmate.db:/app/backend/climbmate.db
      - ./backend/models:/app/backend/models
      - ./holdcheck:/app/holdcheck
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_app worker --loglevel=info --concurrency=2
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - CLIP_MODEL=ViT-B/32
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend/climbmate.db:/app/backend/climbmate.db
      - ./backend/models:/app/backend/models
      - ./holdcheck:/app/holdcheck
    depends_on:
      - redis
      - backend
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
      args:
        VITE_API_URL: https://climbmate.store
    expose:
      - "80"
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  db-data:
  model-data:
  redis_data: